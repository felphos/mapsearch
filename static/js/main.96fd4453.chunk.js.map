{"version":3,"sources":["Map.js","Search.js","PlaceItem.js","PlacesPanel.js","Toggler.js","App.js","reportWebVitals.js","index.js"],"names":["Map","props","latitude","longitude","useState","style","setStyle","useEffect","mapbox","accessToken","map","container","center","zoom","nav","NavigationControl","addControl","changeMap","id","Search","searchPlace","setSearchPlace","className","onSubmit","event","preventDefault","url","fetch","then","response","json","data","features","length","firstResult","addPlaces","console","log","value","onChange","target","placeholder","PlaceItem","place","popup","Popup","closeButton","setHTML","name","marker","Marker","color","setLngLat","setPopup","addTo","onClick","flyTo","PlacesPanel","places","setPlaces","placeItems","index","Toggler","buttons","changeStyle","App","setMap","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96fd4453.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport mapbox from 'mapbox-gl';\nimport './Map.css';\n\nconst Map = (props) => {\n  const latitude = props.latitude;\n  const longitude = props.longitude;\n  const [style, setStyle] = useState(props.style);\n\n  useEffect(() => {\n    mapbox.accessToken =\n      'pk.eyJ1IjoiZmVscGhvcyIsImEiOiJja24wa3llb2wwNzUxMnZuendxb2lib2FkIn0.bVCYhQO1_ca4-1yEtvmYiw';\n\n    var map = new mapbox.Map({\n      container: 'map',\n      style: style,\n      center: [longitude, latitude],\n      zoom: 12,\n    });\n\n    var nav = new mapbox.NavigationControl();\n    map.addControl(nav, 'top-right');\n    props.changeMap(map);\n  }, []);\n\n  useEffect(() => {\n    setStyle(props.style);\n    if (props.map) {\n      props.map.setStyle(props.style);\n    }\n  }, [props.style, props.map]);\n\n  return <div id=\"map\"></div>;\n};\n\nexport default Map;\n","import React, {useState} from 'react';\nimport './Search.css';\n\nconst Search = (props) => {\n  const [searchPlace, setSearchPlace] = useState('');\n  // const [loading, setLoading] = useState(false);\n\n  const handleChange = (event) => {\n    const {value} = event.target;\n    setSearchPlace(value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const accessToken =\n      'pk.eyJ1IjoiZmVscGhvcyIsImEiOiJja24wa3llb2wwNzUxMnZuendxb2lib2FkIn0.bVCYhQO1_ca4-1yEtvmYiw';\n    const url = `https://api.mapbox.com/geocoding/v5/mapbox.places/${searchPlace}.json?proximity=${props.longitude},${props.latitude}&access_token=${accessToken}`;\n\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        if (!data.features.length) {\n          console.log(`Nothing found for ${searchPlace}`);\n          // setLoading(false);\n          return;\n        }\n\n        const firstResult = data.features[0];\n        const latitude = firstResult.center[1];\n        const longitude = firstResult.center[0];\n\n        props.addPlaces(searchPlace, latitude, longitude);\n        setSearchPlace('');\n      });\n  };\n\n  return (\n    <div className=\"search\">\n      <form onSubmit={handleSubmit}>\n        <input\n          value={searchPlace}\n          onChange={handleChange}\n          placeholder=\"Add place...\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Search;\n","import mapbox from 'mapbox-gl';\n\nconst PlaceItem = (props) => {\n  const place = props.place;\n  const map = props.map;\n\n  if (map) {\n    const popup = new mapbox.Popup({\n      closeButton: false,\n    });\n    popup.setHTML(place.name);\n\n    const marker = new mapbox.Marker({\n      color: '#2727e6',\n    });\n    marker.setLngLat([place.longitude, place.latitude]);\n    marker.setPopup(popup);\n    marker.addTo(map);\n  }\n  function goTo() {\n    map.flyTo({center: [place.longitude, place.latitude], zoom: 17});\n  }\n\n  return (\n    <div className=\"place-item\" onClick={() => goTo()}>\n      {place.name}\n    </div>\n  );\n};\n\nexport default PlaceItem;\n","import React, {useState, useEffect} from 'react';\nimport './PlacesPanel.css';\nimport PlaceItem from './PlaceItem';\n\nconst PlacesPanel = (props) => {\n  const [places, setPlaces] = useState(props.places);\n\n  let placeItems = <div className=\"no-results\">Nothing added yet</div>;\n\n  if (places.length > 0) {\n    placeItems = places.map((place, index) => {\n      return <PlaceItem key={index} map={props.map} place={place} />;\n    });\n  }\n\n  useEffect(() => {\n    if (places) {\n      setPlaces(props.places);\n    }\n  }, [props.places, places]);\n\n  return <div className=\"places\">{placeItems}</div>;\n};\n\nexport default PlacesPanel;\n","import './Toggler.css';\n\nconst Toggler = (props) => {\n  const mapStyles = [\n    {name: 'Satellite', url: 'mapbox://styles/mapbox/satellite-streets-v11'},\n    {name: 'Light', url: 'mapbox://styles/mapbox/light-v10'},\n    {name: 'Dark', url: 'mapbox://styles/mapbox/dark-v10'},\n  ];\n\n  const buttons = mapStyles.map((style, index) => {\n    let className = '';\n\n    if (style.url === props.style) {\n      className = 'selected';\n    }\n\n    return (\n      <button\n        className={className}\n        key={index}\n        onClick={() => props.changeStyle(style.url)}\n      >\n        {style.name}\n      </button>\n    );\n  });\n\n  return <div className=\"toggler\">{buttons}</div>;\n};\n\nexport default Toggler;\n","import React, {useState} from 'react';\nimport './App.css';\nimport Map from './Map';\nimport Search from './Search';\nimport PlacesPanel from './PlacesPanel';\nimport Toggler from './Toggler';\n\nfunction App() {\n  const [map, setMap] = useState(null);\n  const latitude = 52.0786;\n  const longitude = 4.2887;\n  const [style, setStyle] = useState(\n    'mapbox://styles/mapbox/satellite-streets-v11'\n  );\n  const [places, setPlaces] = useState([]);\n\n  const changeMap = (map) => {\n    setMap(map);\n  };\n\n  const changeStyle = (url) => {\n    setStyle(url);\n  };\n\n  const addPlaces = (place, latitude, longitude) => {\n    setPlaces([\n      ...places,\n      {name: place, latitude: latitude, longitude: longitude},\n    ]);\n  };\n\n  return (\n    <div className=\"App\">\n      <Search addPlaces={addPlaces} latitude={latitude} longitude={longitude} />\n      <PlacesPanel map={map} places={places} />\n      <Toggler changeStyle={changeStyle} style={style} />\n      <Map\n        map={map}\n        changeMap={changeMap}\n        latitude={latitude}\n        longitude={longitude}\n        style={style}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}